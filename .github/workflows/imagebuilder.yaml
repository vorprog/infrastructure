# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: create-component
on: # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads
  repository_dispatch:
    types: [create-component]
  workflow_dispatch:
    inputs:  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
      manual-workflow-comment:
        description: Manual workflow_dispatch needs at least one input parameter. Use this for comments on the reason for running the workflow manually.
        required: false
        default: Manual workflow_dispatch trigger
env:
  SEMANTIC_VERSION: 0.0.${{ github.run_number }}
defaults:
  run:
    shell: bash -ex {0} # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#custom-shell
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
      LITESTREAM_VERSION_OUTPUT: ''
    steps:
      - name: Load GITHUB_ENV
        uses: actions/download-artifact@v3
        with:
          name: GITHUB_ENV
      - name: Get latest litestream version
        run: |
          gh api repos/benbjohnson/litestream/releases/latest --jq '.tag_name' | tr -d '"' > output.json
          echo "LITESTREAM_VERSION_OUTPUT=$(cat output.json)" >> $GITHUB_ENV
          if [[ ${{ env.LITESTREAM_VERSION_OUTPUT }} == '' ]]; then exit 1; fi
      - name: Create component
        env:
          AWS_IMAGEBUILDER_CREATE_COMPONENT_INPUT_YAML: | # https://docs.aws.amazon.com/imagebuilder/latest/userguide/toe-use-documents.html
            name: systemd-service
            version: ${{ env.SEMANTIC_VERSION }}
            platform: Linux
            data:
              schemaVersion: 1.0  
              phases:
                - name: build
                  steps:
                    - name: Install Packages
                      action: ExecuteBash
                      inputs:
                        commands:
                          - wget https://github.com/benbjohnson/litestream/releases/download/v${{ env.LITESTREAM_VERSION_OUTPUT}}/litestream-${{ env.LITESTREAM_VERSION_OUTPUT}}-linux-amd64.deb
                          - sudo dpkg --install litestream-${{ env.LITESTREAM_VERSION_OUTPUT}}-linux-amd64.deb
                          - sudo apt-get install bpftrace
                    - name: Create litestream config file
                      action: CreateFile
                      inputs:
                        - path: /etc/litestream.yml
                          content: | # https://litestream.io/reference/config/
                            s3:
                              bucket: ${{ env.S3_BUCKET_NAME }}
                              region: ${{ env.AWS_DEFAULT_REGION }}
                            streams:
                              - name: ${{ env.LITESTREAM_STREAM_NAME}}
                                path: /app/data.db
                                url: ${{ env.S3_BUCKET_NAME }}/${{ env.S3_PATH }}
                    - name: Create bpftrace service unit file
                      action: CreateFile
                      inputs:
                        - path: /etc/systemd/system/bpftrace.service
                          content: |
                            [Unit]
                            Description=BPFTrace
                            After=network.target
                            [Service]
                            Type=simple
                            ExecStart=/usr/bin/bpftrace /app/bpftrace/trace.bt > /var/log/bpftrace.s3.log
                            Restart=on-failure
                            [Install]
                            WantedBy=multi-user.target
                    - name: Create aws s3 sync service unit file
                      action: CreateFile
                      inputs:
                        - path: /etc/systemd/system/aws-s3-sync.service
                          content: |
                            [Unit]
                            Description=AWS S3 Sync
                            After=network.target
                            [Service]
                            Type=simple
                            ExecStart=aws s3 sync --exclude "*" --include "*.s3.log" /var/log/ s3://${{ env.S3_BUCKET_NAME }}/${{ env.S3_PATH }}/logs/
                            Restart=on-failure
                            [Install]
                            WantedBy=multi-user.target
                    - name: Create main go app service unit file
                      action: CreateFile
                      inputs:
                        - path: /etc/systemd/system/app.service
                          content: |
                            [Unit]
                            Description=App
                            After=network.target
                            [Service]
                            Type=simple
                            ExecStart=/app/app
                            Restart=on-failure
                            [Install]
                            WantedBy=multi-user.target
                    - name: Enable systemd services
                      action: ExecuteBash
                      inputs:
                        commands:
                          - systemctl enable bpftrace
                          - systemctl enable s3-sync-logs
                          - systemctl enable litestream
                          - systemctl enable app
                    - name: Reboot
                      action: Reboot
                      inputs:
                        delaySeconds: 60
        run: |
          aws imagebuilder create-component \
          --cli-input-yaml file://<(echo $AWS_IMAGEBUILDER_CREATE_COMPONENT_INPUT_YAML) > output.json
          echo "COMPONENT_OUTPUT=$(cat output.json)" >> $GITHUB_ENV
      - name: Save GITHUB_ENV
        uses: actions/upload-artifact@v3
        with:
          name: GITHUB_ENV
          path: $GITHUB_ENV
