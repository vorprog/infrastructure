# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
# https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
name: k3s # https://github.com/k3s-io/k3s
on:
  workflow_dispatch:
    inputs: # https://docs.github.com/en/actions/learn-github-actions/contexts#inputs-context
      manual-workflow-trigger-comment:
        required: false
        default: manual workflow_dispatch triggered 
        description: comment
      force-cache-update:
        default: false
        required: false
        type: boolean
        description: force-cache-update
defaults:
  run:
    shell: bash -ex {0} # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#custom-shell
jobs:
  create-cluster:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - id: checkout
        uses: actions/checkout@v2 # https://github.com/actions/checkout/blob/main/action.yml
      - id: tailscale
        uses: tailscale/github-action@v1 # https://github.com/tailscale/github-action/blob/main/action.yml
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
      - id: tailscale-post-setup
        name: Tailscale Post Setup
        run: |
          echo "TAILSCALE_IP=$(tailscale ip -4)" >> $GITHUB_ENV
          sudo useradd k3s
          (echo '${{ secrets.K3S_USER_PASSWORD }}'; echo '${{ secrets.K3S_USER_PASSWORD }}') | sudo passwd k3s
          sudo usermod -a -G sudo k3s
      - id: cache
        uses: actions/cache@v3 # https://github.com/actions/cache/blob/main/action.yml
        with:
          path: /usr/local/bin/k3s
          key: k3s
      - id: download-k3s
        name: Download k3s
        if: steps.cache.outputs.cache-hit != 'true' || inputs.force-cache-update
        run: | # https://rancher.com/docs/k3s/latest/en/installation/install-options/
          export LATEST_STABLE_VERSION=$(curl -w '%{url_effective}' -L -s -S https://update.k3s.io/v1-release/channels/stable -o /dev/null | sed -e 's|.*/||')
          sudo curl -o /usr/local/bin/k3s -sL https://github.com/k3s-io/k3s/releases/download/${LATEST_STABLE_VERSION}/k3s
          sudo chmod +x /usr/local/bin/k3s
          sudo k3s --version
      - id: set-dns
        name: Set DNS
        env:
          DNS_RECORD_SET_CHANGE_BATCH_JSON: |
            {
              "Comment": "Github Action k3s run ${{ github.run_id }}-${{ github.run_attempt }}",
              "Changes": [{
                "Action": "UPSERT",
                "ResourceRecordSet": {
                  "Name": "k3s-gh.vorprog.com",
                  "Type": "A",
                  "TTL": 300,
                  "ResourceRecords": [{ "Value": "${{ env.TAILSCALE_IP }}" }]
                }
              }]
            }
        run: |
          echo $DNS_RECORD_SET_CHANGE_BATCH_JSON > /tmp/dns-record-set-change-batch.json
          aws route53 change-resource-record-sets \
          --hosted-zone-id ${{ secrets.AWS_HOSTED_ZONE_ID_VORPROG }} \
          --change-batch /tmp/dns-record-set-change-batch.json
      - id: start-cluster
        name: Start Cluster
        env: # https://rancher.com/docs/k3s/latest/en/installation/install-options/server-config/
          K3S_NODE_NAME: ${{ github.run_id }}-${{ github.run_attempt }}
        timeout-minutes: 1
        run: |
          sudo k3s --version
          echo "Node name: $K3S_NODE_NAME"
          sudo mkdir --parents /var/lib/rancher/k3s/server/manifests
          sudo cp ./kubernetes/k3s/ingress-nginx-helm-chart.yaml /var/lib/rancher/k3s/server/manifests
          sudo k3s server --node-label "cloud=github" > k3s.log 2>&1 &
          until (sudo k3s kubectl get nodes); do sleep 1; done
      - id: monitor-cluster
        name: Monitor cluster for 5 minutes
        run: |
          mkdir artifacts
          sudo k3s kubectl version --output yaml > artifacts/version.log
          sudo k3s kubectl get nodes --output yaml > artifacts/nodes.log
          sudo k3s kubectl get services --all-namespaces --output wide --watch > artifacts/services.log
          sudo k3s kubectl get pods --all-namespaces --output wide --watch > artifacts/pods.log 2>&1 &
          sudo k3s kubectl logs deployment/metrics-server --namespace kube-system --follow > artifacts/metrics-server.log 2>&1 &
          sudo k3s kubectl get events --all-namespaces --watch > artifacts/events.log &
          sleep 300
      - id: archive-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: artifacts
