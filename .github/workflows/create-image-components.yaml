on: # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads
  repository_dispatch:
    types: [create-component]
  workflow_call:
    inputs:
      workflow_id:
        type: string
        default: create-component
  workflow_dispatch:
    inputs:  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
      manual-workflow-comment:
        description: Manual workflow_dispatch needs at least one input parameter. Use this for comments on the reason for running the workflow manually.
        required: false
        default: Manual workflow_dispatch trigger
defaults: { run: { shell: "bash -ex {0}" } } # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#custom-shell
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EOF: _EOF_${{ github.run_number }}_
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
      SEMANTIC_VERSION: 0.0.${{ github.run_number }}
    steps:
      - name: Load GITHUB_ENV
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: ${{ github.workflow }}.env
          path: GITHUB_ENV
      - name: Create component
        env:
          AWS_IMAGEBUILDER_CREATE_COMPONENT_INPUT_YAML: | # https://docs.aws.amazon.com/imagebuilder/latest/userguide/toe-use-documents.html
            name: systemd-service
            semanticVersion: ${{ env.SEMANTIC_VERSION }}
            platform: Linux
            data: |
              schemaVersion: 1.0
              parameters:
                - param_app_name:
                    type: string
                - param_app_version:
                    type: string
                - param_litestream_version:
                    type: string
                - param_aws_region:
                    type: string
              phases:
                - name: build
                  steps:
                    - name: Install packages
                      action: ExecuteBash
                      inputs:
                        commands:
                          - wget https://github.com/benbjohnson/litestream/releases/download/v{{ param_litestream_version}}/litestream-{{ param_litestream_version}}-linux-arm64.deb
                          - sudo dpkg --install litestream-{{ param_litestream_version}}-linux-arm64.deb
                          - wget https://github.com/${{ github.repository_owner }}/{{ param_app_name }}/releases/download/v{{ param_app_version }}/{{ param_app_version }}-linux-arm64 -O /app/app
                          - sudo apt-get install bpftrace
#                    - name: Create litestream config file
#                      action: CreateFile
#                      inputs:
#                        - path: /etc/litestream.yml
#                          content: | # https://litestream.io/reference/config/
#                            s3:
#                              bucket: ${{ github.repository_owner }}-{{ param_app_name }}-data
#                              region: {{ param_aws_region }}
#                            streams:
#                              - name: ${{ github.repository_owner }}-{{ param_app_name }}
#                                path: /app/data.db
#                                url: s3://${{ github.repository_owner }}-{{ param_app_name }}-data
#                    - name: Create bpftrace service unit file
#                      action: CreateFile
#                      inputs:
#                        - path: /etc/systemd/system/bpftrace.service
#                          content: |
#                            [Unit]
#                            Name=bpftrace
#                            After=network.target
#                            [Service]
#                            Type=simple
#                            ExecStart=/usr/bin/bpftrace /app/bpftrace/trace.bt > /var/log/bpftrace.s3.log
#                            Restart=on-failure
#                            [Install]
#                            WantedBy=multi-user.target
#                    - name: Create aws s3 sync service unit file
#                      action: CreateFile
#                      inputs:
#                        - path: /etc/systemd/system/aws-s3-sync.service
#                          content: |
#                            [Unit]
#                            Name=s3-sync-logs
#                            After=network.target
#                            [Service]
#                            Type=simple
#                            ExecStart=aws s3 sync --exclude "*" --include "*.s3.log" /var/log/ s3://${{ github.repository_owner }}-{{ param_app_name }}-logs/"%H"
#                            Restart=on-failure
#                            [Install]
#                            WantedBy=multi-user.target
#                    - name: Create main app service unit file
#                      action: CreateFile
#                      inputs:
#                        - path: /etc/systemd/system/app.service
#                          content: |
#                            [Unit]
#                            Name=app
#                            After=network.target
#                            [Service]
#                            Type=simple
#                            EnvironmentFile=/app/.env
#                            ExecStart=/app/app
#                            Restart=on-failure
#                            [Install]
#                            WantedBy=multi-user.target
#                    - name: Reboot
#                      action: Reboot
#                      inputs:
#                        delaySeconds: 60
        run: |
          echo "${{ env.AWS_IMAGEBUILDER_CREATE_COMPONENT_INPUT_YAML }}" > input.yaml
          echo "COMPONENT_OUTPUT<<$EOF" >> $GITHUB_ENV
          aws imagebuilder create-component --cli-input-yaml file://input.yaml >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV
      - name: Save GITHUB_ENV
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.workflow }}.env
          path: GITHUB_ENV
